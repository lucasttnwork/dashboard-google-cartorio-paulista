# üìã PRODUCT REQUIREMENTS DOCUMENT (PRD)
## Dashboard de Monitoramento - Cart√≥rio Paulista

### üéØ **VIS√ÉO GERAL DO PRODUTO**

O Dashboard do Cart√≥rio Paulista √© uma plataforma web completa para monitoramento e an√°lise de avalia√ß√µes do Google Business Profile, com foco em m√©tricas de performance, men√ß√µes de colaboradores e automa√ß√£o de coleta de dados.

### üéØ **OBJETIVOS PRINCIPAIS**

1. **Monitoramento em Tempo Real**: Acompanhar avalia√ß√µes do Google Business Profile 24/7
2. **An√°lise de Performance**: M√©tricas detalhadas sobre satisfa√ß√£o do cliente e colaboradores
3. **Automa√ß√£o de Coleta**: Sistema autom√°tico de scraping de dados a cada hora
4. **Interface Intuitiva**: Dashboard responsivo com filtros avan√ßados e visualiza√ß√µes
5. **Deploy na Railway**: Infraestrutura escal√°vel e confi√°vel

---

## üìä **FUNCIONALIDADES CORE**

### 1. **COLETA AUTOM√ÅTICA DE DADOS**

#### **1.1 Sistema de Scraping Autom√°tico**
- **Frequ√™ncia**: A cada hora
- **Fonte**: Google Business Profile do Cart√≥rio Paulista
- **Dados Coletados**:
  - Avalia√ß√µes (rating 1-5 estrelas)
  - Coment√°rios dos clientes
  - Data/hora da avalia√ß√£o
  - Nome do avaliador
  - Fonte da avalia√ß√£o (Google, Facebook, etc.)
- **Armazenamento**: Supabase PostgreSQL
- **Backup**: Dados hist√≥ricos preservados

#### **1.2 Processamento de Dados**
- **Deduping**: Evitar duplicatas de avalia√ß√µes
- **Classifica√ß√£o**: Categoriza√ß√£o autom√°tica por sentimento
- **An√°lise de Texto**: Extra√ß√£o de men√ß√µes a colaboradores
- **Valida√ß√£o**: Verifica√ß√£o de integridade dos dados

### 2. **DASHBOARD ANAL√çTICO**

#### **2.1 P√°gina Principal (Dashboard)**
- **KPIs Principais**:
  - Total de avalia√ß√µes
  - Rating m√©dio
  - Percentual de avalia√ß√µes 5‚òÖ
  - Colaboradores ativos
- **Gr√°fico de Evolu√ß√£o**: Avalia√ß√µes e rating m√©dio por per√≠odo
- **Ranking de Colaboradores**: Top colaboradores mais mencionados

#### **2.2 P√°gina de Avalia√ß√µes (Reviews)**
- **Lista Completa**: Todas as avalia√ß√µes com filtros avan√ßados
- **Filtros Dispon√≠veis**:
  - Por per√≠odo (7d, 30d, 90d, custom)
  - Por rating (1-5 estrelas)
  - Por colaborador mencionado
  - Por fonte (Google, Facebook, Instagram, Website)
- **Funcionalidades**:
  - Busca em tempo real
  - Ordena√ß√£o por data/rating
  - Export CSV com filtros aplicados
  - Visualiza√ß√£o detalhada de coment√°rios

#### **2.3 P√°gina de Colaboradores**
- **M√©tricas Individuais**:
  - N√∫mero de men√ß√µes
  - Rating m√©dio das avalia√ß√µes
  - Distribui√ß√£o de ratings
- **Ranking Geral**: Top 10 colaboradores mais mencionados
- **Performance por Pessoa**: An√°lise individual detalhada

#### **2.4 P√°gina Analytics**
- **M√©tricas Avan√ßadas**:
  - Tend√™ncia de rating mensal
  - Avalia√ß√µes por dia da semana
  - Tempo m√©dio de resposta
  - Satisfa√ß√£o geral por per√≠odo
- **Gr√°ficos Interativos**: Charts com drill-down
- **Comparativos**: An√°lise de performance vs per√≠odo anterior

#### **2.5 P√°gina Trends (Tend√™ncias)**
- **An√°lise Temporal**: Evolu√ß√£o de m√©tricas ao longo do tempo
- **Proje√ß√µes**: Tend√™ncias baseadas em dados hist√≥ricos
- **Comparativos**: Performance por per√≠odo (semanal/mensal/anual)

#### **2.6 P√°gina Reports (Relat√≥rios)**
- **Gera√ß√£o Autom√°tica**: Relat√≥rios mensais/semanal
- **Templates**: Relat√≥rios customiz√°veis por per√≠odo
- **Export**: PDF e Excel com gr√°ficos inclu√≠dos
- **Agendamento**: Envio autom√°tico por email

### 3. **INTERFACE E EXPERI√äNCIA**

#### **3.1 Design System**
- **Framework**: Next.js 15 + TypeScript
- **UI Library**: shadcn/ui + Radix UI + Tailwind CSS v4
- **Tema**: Light/Dark/System com persist√™ncia
- **Responsividade**: Mobile-first design

#### **3.2 Navega√ß√£o**
- **Sidebar**: Navega√ß√£o lateral colaps√≠vel
- **Command Menu**: Busca global (Ctrl+K)
- **Breadcrumbs**: Navega√ß√£o contextual
- **Estados Visuais**: Loading, error, empty states

#### **3.3 Intera√ß√µes**
- **Filtros Avan√ßados**: Modal com m√∫ltiplas op√ß√µes
- **Busca em Tempo Real**: Debounced search
- **Feedback Visual**: Toasts, loading states, confirma√ß√µes
- **Acessibilidade**: WCAG AA compliance

### 4. **INFRAESTRUTURA E DEPLOY**

#### **4.1 Backend (Supabase)**
- **Database**: PostgreSQL com Row Level Security
- **Edge Functions**: Processamento serverless
- **Real-time**: Atualiza√ß√µes em tempo real via WebSocket
- **API**: RESTful API com autentica√ß√£o

#### **4.2 Frontend (Railway)**
- **Runtime**: Node.js 20+
- **Build**: Next.js production build
- **Static Assets**: CDN otimizado
- **Monitoring**: Logs e m√©tricas de performance

#### **4.3 Sistema de Scraping**
- **Tecnologia**: Node.js + Puppeteer/Playwright
- **Agendamento**: Cron jobs a cada hora
- **Error Handling**: Retry logic e alertas
- **Rate Limiting**: Controle de frequ√™ncia para evitar blocks

---

## üîß **TECNOLOGIAS E ARQUITETURA**

### **Frontend Stack**
- **Framework**: Next.js 15 (App Router)
- **Linguagem**: TypeScript
- **Styling**: Tailwind CSS v4
- **UI Components**: shadcn/ui + Radix UI
- **State Management**: Zustand + TanStack Query
- **Charts**: Recharts
- **Tables**: TanStack Table
- **Forms**: React Hook Form + Zod

### **Backend Stack**
- **Platform**: Supabase
- **Database**: PostgreSQL
- **Edge Functions**: Deno/TypeScript
- **Authentication**: Supabase Auth
- **Real-time**: Supabase Realtime

### **Scraping Stack**
- **Runtime**: Node.js
- **Browser Automation**: Playwright
- **Scheduling**: Cron/Node-cron
- **Data Processing**: Custom scripts
- **Storage**: Supabase PostgreSQL

### **Deploy Stack**
- **Platform**: Railway
- **Container**: Docker
- **CI/CD**: GitHub Actions
- **Monitoring**: Railway logs + custom dashboards
- **Domain**: HTTPS configurado

---

## üìà **M√âTRICAS DE SUCESSO**

### **Funcionais**
- ‚úÖ 99.9% uptime do scraping autom√°tico
- ‚úÖ < 5 minutos de lat√™ncia na atualiza√ß√£o de dados
- ‚úÖ 100% das avalia√ß√µes do GBP coletadas
- ‚úÖ Filtros aplicados em < 2 segundos
- ‚úÖ Export CSV em < 10 segundos

### **Performance**
- ‚úÖ Core Web Vitals: Good (CWV)
- ‚úÖ First Contentful Paint: < 1.5s
- ‚úÖ Largest Contentful Paint: < 2.5s
- ‚úÖ Cumulative Layout Shift: < 0.1
- ‚úÖ Bundle Size: < 200KB gzipped

### **Usabilidade**
- ‚úÖ Task Completion Rate: > 95%
- ‚úÖ User Satisfaction Score: > 4.5/5
- ‚úÖ Error Rate: < 1%
- ‚úÖ Mobile Responsiveness: 100%

---

## üöÄ **ROADMAP DE IMPLEMENTA√á√ÉO**

### **Fase 1: Core Infrastructure (2 semanas)**
1. Setup do projeto Next.js + Supabase
2. Configura√ß√£o do banco de dados
3. Implementa√ß√£o da autentica√ß√£o
4. Estrutura base do dashboard
5. Sistema de scraping b√°sico

### **Fase 2: Core Features (3 semanas)**
1. Dashboard principal com KPIs
2. P√°gina de avalia√ß√µes com filtros
3. Sistema de colaboradores
4. Analytics b√°sicos
5. Export de dados

### **Fase 3: Advanced Features (2 semanas)**
1. Scraping autom√°tico com cron
2. Real-time updates
3. Relat√≥rios avan√ßados
4. Notifica√ß√µes por email
5. Otimiza√ß√£o de performance

### **Fase 4: Production Ready (1 semana)**
1. Configura√ß√£o Railway
2. CI/CD pipeline
3. Monitoring e alertas
4. Documenta√ß√£o completa
5. Testes automatizados

---

## üéØ **CRIT√âRIOS DE ACEITA√á√ÉO**

### **Funcionalidades M√≠nimas**
- [ ] Dashboard acess√≠vel e responsivo
- [ ] Coleta autom√°tica de avalia√ß√µes GBP
- [ ] Filtros avan√ßados funcionando
- [ ] Export CSV com dados filtrados
- [ ] M√©tricas de colaboradores atualizadas
- [ ] Sistema rodando na Railway

### **Qualidade de C√≥digo**
- [ ] TypeScript strict mode
- [ ] ESLint sem warnings
- [ ] Testes unit√°rios (60% cobertura)
- [ ] Componentes reutiliz√°veis
- [ ] Documenta√ß√£o t√©cnica completa

### **Performance**
- [ ] Lighthouse Score > 90
- [ ] Bundle size otimizado
- [ ] Lazy loading implementado
- [ ] Cache inteligente configurado

---

## üîí **SEGURAN√áA E CONFIABILIDADE**

### **Seguran√ßa**
- Autentica√ß√£o obrigat√≥ria
- Row Level Security no Supabase
- HTTPS em produ√ß√£o
- Sanitiza√ß√£o de inputs
- Rate limiting nas APIs

### **Confiabilidade**
- Backup autom√°tico di√°rio
- Monitoramento 24/7
- Alertas para falhas
- Retry logic implementado
- Graceful degradation

---

## üìö **DOCUMENTA√á√ÉO E SUPORTE**

### **Documenta√ß√£o T√©cnica**
- README completo
- API documentation
- Setup instructions
- Troubleshooting guide
- Contributing guidelines

### **Suporte ao Usu√°rio**
- Interface intuitiva
- Tooltips contextuais
- Help integrado
- FAQ atualizada
- Suporte por email

---

**Data de Cria√ß√£o**: $(date)
**Vers√£o**: 1.0.0
**Status**: ‚úÖ Aprovado para Implementa√ß√£o
**Respons√°vel**: Senior Frontend/UI Engineer

---

## üìã **TAREFAS DE IMPLEMENTA√á√ÉO DETALHADAS**

### **INFRAESTRUTURA**
1. Configurar projeto Next.js 15 com TypeScript
2. Setup Supabase com PostgreSQL
3. Implementar autentica√ß√£o e RLS
4. Configurar Railway para deploy
5. Setup CI/CD com GitHub Actions

### **FRONTEND CORE**
1. Implementar App Shell com sidebar e navega√ß√£o
2. Criar sistema de temas (Light/Dark/System)
3. Implementar Command Menu (Ctrl+K)
4. Criar componentes base (KPI cards, charts, tables)
5. Implementar filtros avan√ßados

### **SCRAPING SYSTEM**
1. Configurar Playwright para scraping GBP
2. Implementar coleta autom√°tica de avalia√ß√µes
3. Criar sistema de deduping
4. Implementar processamento de texto para men√ß√µes
5. Configurar cron job de hora em hora

### **P√ÅGINAS E FUNCIONALIDADES**
1. Dashboard principal com m√©tricas
2. P√°gina Reviews com filtros e export
3. P√°gina Colaboradores com ranking
4. P√°gina Analytics com gr√°ficos avan√ßados
5. P√°gina Trends com an√°lise temporal
6. P√°gina Reports com gera√ß√£o autom√°tica

### **QUALIDADE E PERFORMANCE**
1. Implementar testes unit√°rios e E2E
2. Otimizar Core Web Vitals
3. Configurar lazy loading e code splitting
4. Implementar error boundaries
5. Adicionar acessibilidade WCAG AA

### **DEPLOY E MONITORAMENTO**
1. Configurar Railway para produ√ß√£o
2. Implementar monitoring e alertas
3. Configurar backup autom√°tico
4. Documentar processo de deploy
5. Criar runbooks de opera√ß√£o

---

**Este PRD define completamente o escopo e requisitos para o Dashboard do Cart√≥rio Paulista, garantindo uma implementa√ß√£o robusta, escal√°vel e user-friendly.**
